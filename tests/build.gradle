apply plugin: 'scala'
apply plugin: 'eclipse'
compileTestScala.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
    mavenLocal()
}

tasks.withType(Test) {
    systemProperties = System.getProperties() // Forward defined properties to the test JVM
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
        exceptionFormat = 'full'
    }
    outputs.upToDateWhen { false } // force tests to run every time
}

task testWithoutCredentials(type: Test) {
  exclude '**/*Credentials*'
}

task testBlueCI(type: Test) {
  exclude '**/IBMNodeJsActionDB2Tests*'
}

task testBlueDeployment(type: Test) {
  include 'runtime/integration/**'
  include 'runtime/sdk/**'

  // To exlude tests from the BlueDeployment, place them here. See sample to exclude all NodeJs12 tests, below.
  // exclude '**/*NodeJs12*'

  // Exclude the nodejs:14 specific tests as this runtime is not available, yet.
  exclude '**/*IBMNodeJsActionCloudant*'
  exclude '**/*IBMNodeJsActionWatson*'
  exclude '**/*IBMNodeJsCOS*'
  exclude '**/*IBMNodeJsDb2Cloud*'
  exclude '**/*NodeJsSDK*'
}

dependencies {
    compile "org.scala-lang:scala-library:${gradle.scala.version}"
    compile "org.apache.openwhisk:openwhisk-tests:${gradle.openwhisk.version}:tests"
    compile "org.apache.openwhisk:openwhisk-tests:${gradle.openwhisk.version}:test-sources"
    implementation group: 'com.typesafe.akka', name: "akka-http2-support_${gradle.scala.depVersion}", version: "${gradle.akka_http.version}"
    implementation group: 'com.typesafe.akka', name: "akka-http-xml_${gradle.scala.depVersion}", version: "${gradle.akka_http.version}"
    implementation group: 'com.typesafe.akka', name: "akka-discovery_${gradle.scala.depVersion}", version: "${gradle.akka.version}"
    implementation group: 'com.typesafe.akka', name: "akka-protobuf_${gradle.scala.depVersion}", version: "${gradle.akka.version}"
    implementation group: 'com.typesafe.akka', name: "akka-remote_${gradle.scala.depVersion}", version: "${gradle.akka.version}"
    implementation group: 'com.typesafe.akka', name: "akka-cluster_${gradle.scala.depVersion}", version: "${gradle.akka.version}"
}

tasks.withType(ScalaCompile) {
    scalaCompileOptions.additionalParameters = gradle.scala.compileFlags
}
